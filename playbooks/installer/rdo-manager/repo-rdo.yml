---
- include: ../../group_by.yml ansible_ssh_user=root

- name: Setup openstack repos
  hosts: "{{ repo_host }}"
  vars:
    - ansible_ssh_user: root
    - product_override_version: 7-director
  gather_facts: yes
  tasks:
      - name: clean release rpms
        yum: name={{ item }} state=absent
        with_items:
          - rdo-release*
          - epel-release
          - rhos-release

      - name: remove any yum repos not owned by rpm
        file: path=/etc/yum.repos.d/{{ item }} state=absent
        with_items:
          - beaker-*

      - name: Enable last known good RDO Trunk Delorean repository
        shell: "curl -o /etc/yum.repos.d/delorean.repo http://trunk.rdoproject.org/centos7/current-tripleo/delorean.repo"

      - name: Enable latest RDO Trunk Delorean repository
        shell: >
          curl -o /etc/yum.repos.d/delorean-current.repo http://trunk.rdoproject.org/centos7/current/delorean.repo;
          sed -i 's/\[delorean\]/\[delorean-current\]/' /etc/yum.repos.d/delorean-current.repo;
          curl -o /etc/yum.repos.d/delorean-deps.repo http://trunk.rdoproject.org/centos7/delorean-deps.repo

      - name: Update delorean-current.repo
        shell: >
          printf "\n" >> /etc/yum.repos.d/delorean-current.repo;
          printf "includepkgs=diskimage-builder,openstack-heat,instack,instack-undercloud,openstack-ironic,openstack-ironic-inspector,os-cloud-config,os-net-config,python-ironic-inspector-client,python-tripleoclient,tripleo-common,openstack-tripleo-heat-templates,openstack-tripleo-image-elements,openstack-tuskar-ui-extras,openstack-puppet-modules" >> /etc/yum.repos.d/delorean-current.repo

      - name: Install epel release
        command: "yum localinstall -y {{ distro.epel_release }}"

      - name: yum clean all
        command: yum clean all

- name: RHEL RDO prep
  hosts: "{{ repo_host }}:&RedHat"
  vars:
    - ansible_ssh_user: root
  roles:
    # enable this role when rdo and rhos officially diverge
    #- { role: linux/rhel/rdo }
    - { role: product/rdo/rhel }

- name: CentOS RDO prep
  hosts: "{{ repo_host }}:&CentOS"
  vars:
    - ansible_ssh_user: root
  roles:
    - { role: linux/centos }
    - { role: product/rdo/rhel }

- name: Linux common prep (Collect performance data, etc.)
  hosts: "{{ repo_host }}"
  vars:
    - ansible_ssh_user: root
  roles:
    - { role: linux-common }

- name: Update packages on the host
  hosts: "{{ repo_host }}"
  vars:
    - ansible_ssh_user: root
  tasks:
    - name: repolist
      command: yum -d 7 repolist

    - name: update all packages
      yum: name=* state=latest
      when: yum_update | bool

    - name: Find if a new kernel was installed
      shell: find /boot/ -anewer /proc/1/stat -name 'initramfs*' | egrep ".*"
      register: new_kernel
      ignore_errors: True
      when: "'{{ repo_host }}' == 'virthost'"

    - name: reboot host
      sudo: no
      local_action:
        wait_for_ssh
          reboot_first=true
          host="{{ ansible_ssh_host }}"
          user="root"
          ssh_opts="-F ../../../ssh.config.ansible"
          key="{{ ansible_ssh_private_key_file }}"
          timeout=900
          sudo=false
      when: "'{{ repo_host }}' == 'virthost' and new_kernel.rc == 0"
