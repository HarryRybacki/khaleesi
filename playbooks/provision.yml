---
- name: Group hosts by provisioner
  hosts: local
  sudo: no
  tasks:
    - group_by: key={{ provisioner.type }}
    - group_by: key={{ provisioner.network.type }}
  tags:
    - provision

- name: Get nodes - OpenStack
  hosts: local:&openstack
  sudo: no
  gather_facts: False
  roles:
    - { role: get_nodes/openstack }
  tags:
    - provision

- name: Get nodes - Rackspace
  hosts: local:&rackspace
  sudo: no
  gather_facts: False
  roles:
    - { role: get_nodes/rax }
    - { role: get_nodes/add_hosts,
              nodes_created: "{{ new_nodes.results }}",
              floating_ips: [],
              network_expected: rax }
  tags:
    - provision

- name: Get nodes - Amazon
  hosts: local:&amazon
  sudo: no
  gather_facts: False
  roles:
    - { role: get_nodes/ec2 }
    # - { role: get_nodes/add_ec2_hosts,
    #           nodes_created: "{{ ec2.results.0.instances }}",
    #           network_expected: amazon }

- name: Assign floating IP and add hosts - Nova
  hosts: local:&openstack:&nova
  sudo: no
  gather_facts: False
  roles:
    - { role: get_nodes/fip-nova }
    - { role: get_nodes/add_hosts,
              nodes_created: "{{ new_nodes.results }}",
              floating_ips: "{{ new_floating_ips.results }}",
              network_expected: nova }
  tags:
    - provision

- name: Assign floating IP and add hosts - Neutron
  hosts: local:&openstack:&neutron
  sudo: no
  gather_facts: False
  roles:
    - { role: get_nodes/fip-neutron }
    - { role: get_nodes/add_hosts,
              nodes_created: "{{ new_nodes.results }}",
              floating_ips: "{{ new_floating_ips.results }}",
              network_expected: neutron }
  tags:
    - provision

- name: Post provision tasks
  hosts: local:!manual
  sudo: no
  gather_facts: False
  roles:
    - { role: get_nodes/post }
  tags:
    - provision

- name: Set facts for hosts
  hosts: openstack:!manually-provisioned:!amazon
  gather_facts: False
  roles:
    - { role: set_facts }
    - { role: wait_for_hosts }
  tags:
    - provision
